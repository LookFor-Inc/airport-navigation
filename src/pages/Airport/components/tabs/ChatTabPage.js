import React, {createRef, useState} from 'react'
import SendIcon from '@/assets/icons/SendIcon'
import IconButton from '@/components/IconButton'
import Input from '@/components/Input'
import Content from '@/components/Page/Content'
import {getCurrentTimeString} from '@/helpers/dateUtil'
import Message from '@/pages/Airport/components/Chat/Message'
import Navbar from '@/pages/Airport/components/Navbar/Navbar'

const messages = [
  {
    from: 'robot',
    text: '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫–æ –º–Ω–µ –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π.',
    time: getCurrentTimeString()
  }
]

/**
 * –í–∫–ª–∞–¥–∫–∞ –æ–Ω–ª–∞–π–Ω-—á–∞—Ç–∞
 * @returns {JSX.Element} –≠–ª–µ–º–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
function ChatTabPage() {
  const [message, setMessage] = useState('')
  const scrollRef = createRef()

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {void}
   */
  const sendMessage = () => {
    if (message === '') return
    messages.push({
      from: 'user',
      text: message,
      time: getCurrentTimeString()
    })
    setMessage('')
    messages.push({
      from: 'robot',
      text: '–ü–æ–¥–æ–∂–¥–∏—Ç–µ, —Å –í–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä üë®‚Äçüíª',
      time: getCurrentTimeString()
    })
    scrollRef.current.scrollIntoView({behavior: 'smooth'})
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
   * @param {Event} e –°–æ–±—ã—Ç–∏–µ
   * @returns {void}
   */
  const onSubmit = e => {
    e.preventDefault()
    sendMessage()
  }

  return (
    <>
      <Navbar>
        <div className='font-medium text-center'>
          –û–Ω–ª–∞–π–Ω-—á–∞—Ç
        </div>
      </Navbar>
      <div className='mt-16 mb-26'>
        <Content
          className='overflow-scroll'
          style={{height: 'calc(100vh - 176px)'}}
        >
          {messages.map((message, idx) => (
            <Message
              key={idx}
              fromUser={message.from === 'user'}
              time={message.time}
            >{message.text}</Message>
          ))}
          <div ref={scrollRef} />
        </Content>
      </div>
      <form
        onSubmit={e => onSubmit(e)}
        className='fixed inset-x-0 flex bg-white border border-gray-300 z-40'
        style={{bottom: '61px'}}
      >
        <Input
          type='text'
          className='rounded-none border-0'
          placeholder='–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
          onChange={e => setMessage(e.target.value)}
          value={message}
        />
        <IconButton
          type='submit'
          className='rounded-none text-primary hover:text-primaryDark'
          icon={<SendIcon className='' />}
          onClick={() => sendMessage()}
        />
      </form>
    </>
  )
}

ChatTabPage.propTypes = {}

export default ChatTabPage
